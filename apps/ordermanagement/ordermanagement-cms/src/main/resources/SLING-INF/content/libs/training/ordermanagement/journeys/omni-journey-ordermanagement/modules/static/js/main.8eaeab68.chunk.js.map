{"version":3,"sources":["../external \"React\"","../external \"ReactRedux\"","../external \"UiLibCore.ListItemText\"","../external \"UiLibCore.TextField\"","../external \"ReactDOM\"","../external \"UiLibCore.Typography\"","../external \"UiLibCore.Stepper\"","../external \"UiLibCore.Step\"","../external \"UiLibCore.StepLabel\"","../external \"UiLibCore.Card\"","../external \"UiLibCore.CardActionArea\"","../external \"UiLibCore.CardActions\"","../external \"UiLibCore.CardContent\"","../external \"UiLibCore.CardMedia\"","../external \"UiLibCore.Icon\"","../external \"UiLibCore.DialogTitle\"","../external \"UiLibCore.Dialog\"","../external \"UiLibCore.List\"","../external \"UiLibCore.ListItem\"","../external \"UiLibCore.Select\"","../external \"UiLibCore.MenuItem\"","../external \"UiLibCore.styles\"","api/index.js","config.js","redux/products/dataActions.js","redux/products/actionTypes.js","redux/products/httpActions.js","components/ProductList.js","components/CustomerInformation.js","components/OrderConfirmation.js","components/Details.js","components/WaitingForStore.js","components/StepWizard.js","components/Loading.js","root.js","journey.js","redux/products/reducer.js","redux/store.js","app.js","index.js","../external \"OmniJourney\"","../external \"UiLibCore.Button\""],"names":["module","exports","React","ReactRedux","UiLibCore","ListItemText","TextField","ReactDOM","Typography","Stepper","Step","StepLabel","Card","CardActionArea","CardActions","CardContent","CardMedia","Icon","DialogTitle","Dialog","List","ListItem","Select","MenuItem","styles","httpClientService","Config","instanceId","productId","createInstance","config","url","method","request","getProducts","getCategories","getDeliveryOptions","readUpdateProcess","selectProducts","createOrder","updateCustomerInfo","customerInformation","data","submitOrder","instance","type","setPreferences","preferences","initializeUsersHttpClientService","dispatch","getState","HttpClient","journey","services","a","api","console","log","message","withStyles","media","height","width","card","maxWidth","maxHeight","marginLeft","cartButton","textAlign","marginBottom","content","overflow","display","classes","listProducts","useSelector","state","products","useState","isDialogOpen","setDialogOpen","useDispatch","CartDialog","open","onClose","className","variant","color","onClick","length","map","e","i","key","productName","image","title","gutterBottom","component","productPrice","size","jwcontext","id","other","aria-labelledby","product","index","primary","select","marginTop","setDeliveryOption","setAddress","setName","name","address","deliveryOption","defaultDeliveryOptions","deliveryOptions","fullWidth","label","value","onChange","target","margin","inputProps","option","userInformation","productInformation","productSeparation","price","customer","reduce","prev","current","Details","order","delivery","WaitingForStore","RealTime","rt","handleOnOpen","event","handleOnMessage","newInstance","Object","assign","JSON","parse","status","updatedBy","handleOnError","handleOnClose","useEffect","addEvent","connect","theme","root","marginRight","navigationButtons","position","right","bottom","UserPreferences","User","activeStep","setActiveStep","steps","this","handleReset","disabled","step","buttonDisabled","requestUser","then","user","deleteUserPreference","window","location","reload","getButtonLabel","Loading","class","readyInstance","setReadyInstance","properties","createProperty","description","withRootHoc","readyDependencies","setReadyDependencies","dependencies","categories","query","qs","stringify","expression","limit","sort","arrayFormat","queryUserPreferences","preference","createPreference","path","createdPreference","actions","catch","fetchedListProducts","fetchedCategories","fetchedDeliveryOptions","fetchedInstance","fetchedPreferences","INITIAL_STATE","undefined","fetchedInitialInstanceId","reducers","action","store","createStoreSingleton","RenderJourney","FinalJourney","Journey","packageName","parent","App","handleReceiveMessage","Component","render","document","getElementById","OmniJourney","Button"],"mappings":"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","file":"static/js/main.8eaeab68.chunk.js","sourcesContent":["module.exports = React;","module.exports = ReactRedux;","module.exports = UiLibCore.ListItemText;","module.exports = UiLibCore.TextField;","module.exports = ReactDOM;","module.exports = UiLibCore.Typography;","module.exports = UiLibCore.Stepper;","module.exports = UiLibCore.Step;","module.exports = UiLibCore.StepLabel;","module.exports = UiLibCore.Card;","module.exports = UiLibCore.CardActionArea;","module.exports = UiLibCore.CardActions;","module.exports = UiLibCore.CardContent;","module.exports = UiLibCore.CardMedia;","module.exports = UiLibCore.Icon;","module.exports = UiLibCore.DialogTitle;","module.exports = UiLibCore.Dialog;","module.exports = UiLibCore.List;","module.exports = UiLibCore.ListItem;","module.exports = UiLibCore.Select;","module.exports = UiLibCore.MenuItem;","module.exports = UiLibCore.styles;","import { Config } from '../config';\r\n\r\nlet httpClientService;\r\n\r\nexport const setHttpClient = (HttpClient) => (httpClientService = HttpClient);\r\nexport const createInstance = () => {\r\n    const config = {\r\n        url: Config.CREATE_INSTANCE,\r\n        method: 'POST'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\n\r\nexport const getProducts = () => {\r\n    const config = {\r\n        url: Config.GET_PRODUCTS(),\r\n        method: 'GET'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\nexport const getCategories = () => {\r\n    const config = {\r\n        url: Config.GET_CATEGORIES(),\r\n        method: 'GET'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\nexport const getDeliveryOptions = () => {\r\n    const config = {\r\n        url: Config.GET_DELIVERY_OPTIONS(),\r\n        method: 'GET'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\n\r\nexport const readUpdateProcess = (instanceId) => {\r\n    const config = {\r\n        url: Config.READ_INSTANCE(instanceId),\r\n        method: 'GET'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\nexport const selectProducts = (instanceId, productId) => {\r\n    const config = {\r\n        url: Config.SELECT_PRODUCTS(instanceId, productId),\r\n        method: 'PUT'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\n\r\nexport const createOrder = (instanceId) => {\r\n    const config = {\r\n        url: Config.CREATE_ORDER(instanceId),\r\n        method: 'POST'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\nexport const updateCustomerInfo = (instanceId, customerInformation) => {\r\n    const config = {\r\n        url: Config.UPDATE_CUSTOMER_INFO(instanceId),\r\n        method: 'POST',\r\n        data: customerInformation\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\nexport const submitOrder = (instanceId) => {\r\n    const config = {\r\n        url: Config.SUBMIT_ORDER(instanceId),\r\n        method: 'POST'\r\n    };\r\n    return httpClientService.request(config);\r\n};\r\n","export const Config = {\r\n    CREATE_INSTANCE: '/bin/mvc.do/ordermanagement/v1/app/',\r\n    GET_INSTANCE_URL: (instanceId) => `/bin/mvc.do/ordermanagement/v1/app/${instanceId}`,\r\n    GET_PRODUCTS: () => `/bin/mvc.do/ordermanagement/v1/app/products`,\r\n    GET_CATEGORIES: () => `/bin/mvc.do/ordermanagement/v1/app/category`,\r\n    GET_DELIVERY_OPTIONS: () => `/bin/mvc.do/ordermanagement/v1/app/delivery-options`,\r\n    SELECT_PRODUCTS: (instanceId, productId) => `/bin/mvc.do/ordermanagement/v1/app/${instanceId}/products/${productId}`,\r\n    CREATE_ORDER: (instanceId) => `/bin/mvc.do/ordermanagement/v1/app/${instanceId}/order-create`,\r\n    UPDATE_CUSTOMER_INFO: (instanceId) => `/bin/mvc.do/ordermanagement/v1/app/${instanceId}/customer-info`,\r\n    SUBMIT_ORDER: (instanceId) => `/bin/mvc.do/ordermanagement/v1/app/${instanceId}/order-submit`,\r\n    READ_INSTANCE: (instanceId) => `/bin/mvc.do/ordermanagement/v1/app/${instanceId}`\r\n};\r\n","import {\r\n    CREATE_INSTANCE,\r\n    GET_PRODUCTS,\r\n    GET_CATEGORIES,\r\n    GET_DELIVERY_OPTIONS,\r\n    READ_UPDATE_PROCESS,\r\n    CREATE_ORDER,\r\n    UPDATE_CUSTOMER_INFO,\r\n    SUBMIT_ORDER,\r\n    SELECT_PRODUCTS,\r\n    SET_INSTANCE_ID,\r\n    SET_PREFERENCES,\r\n    RESET\r\n} from './actionTypes';\r\n\r\nexport const setInstanceId = (instanceId) => ({ type: SET_INSTANCE_ID, instanceId });\r\nexport const createInstance = (instance) => ({ type: CREATE_INSTANCE, instance });\r\n\r\nexport const getProducts = (products) => ({ type: GET_PRODUCTS, products });\r\nexport const getCategories = (categories) => ({ type: GET_CATEGORIES, categories });\r\nexport const getDeliveryOptions = (deliveryOptions) => ({ type: GET_DELIVERY_OPTIONS, deliveryOptions });\r\n\r\nexport const readUpdateProcess = (instance) => ({ type: READ_UPDATE_PROCESS, instance });\r\nexport const selectProducts = (instance) => ({ type: SELECT_PRODUCTS, instance });\r\n\r\nexport const createOrder = (instance) => ({ type: CREATE_ORDER, instance });\r\nexport const updateCustomerInfo = (instance) => ({ type: UPDATE_CUSTOMER_INFO, instance });\r\nexport const submitOrder = (instance) => ({ type: SUBMIT_ORDER, instance });\r\n\r\nexport const setPreferences = (preferences) => ({ type: SET_PREFERENCES, preferences });\r\n\r\nexport const reset = () => ({ type: RESET });\r\n","export const SET_INSTANCE_ID = 'SET_INSTANCE_ID';\r\nexport const CREATE_INSTANCE = 'CREATE_INSTANCE';\r\n\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\r\nexport const GET_DELIVERY_OPTIONS = 'GET_DELIVERY_OPTIONS';\r\n\r\nexport const READ_UPDATE_PROCESS = 'READ_UPDATE_PROCESS';\r\nexport const SELECT_PRODUCTS = 'SELECT_PRODUCTS';\r\n\r\nexport const CREATE_ORDER = 'CREATE_ORDER';\r\nexport const UPDATE_CUSTOMER_INFO = 'UPDATE_CUSTOMER_INFO';\r\nexport const SUBMIT_ORDER = 'SUBMIT_ORDER';\r\n\r\nexport const SET_PREFERENCES = 'SET_PREFERENCES';\r\n\r\nexport const RESET = 'RESET';\r\n","import * as api from '../../api';\r\nimport * as actions from './dataActions.js';\r\n\r\nexport const initializeUsersHttpClientService = () => (dispatch, getState) => {\r\n    api.setHttpClient(getState().journey.services.HttpClient);\r\n};\r\n\r\nexport const createInstance = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createInstance();\r\n        dispatch(actions.createInstance(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getProducts();\r\n        dispatch(actions.getProducts(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const getCategories = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getCategories();\r\n        dispatch(actions.getCategories(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const getDeliveryOptions = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getDeliveryOptions();\r\n        dispatch(actions.getDeliveryOptions(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const readUpdateProcess = (instanceId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.readUpdateProcess(instanceId);\r\n        dispatch(actions.readUpdateProcess(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const selectProducts = (instanceId, productId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.selectProducts(instanceId, productId);\r\n        dispatch(actions.selectProducts(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const createOrder = (instanceId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createOrder(instanceId);\r\n        dispatch(actions.createOrder(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const updateCustomerInfo = (instanceId, customerInformation) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateCustomerInfo(instanceId, customerInformation);\r\n        dispatch(actions.updateCustomerInfo(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const submitOrder = (instanceId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.submitOrder(instanceId);\r\n        dispatch(actions.submitOrder(data));\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withStyles } from '@ui-lib/core/styles';\r\nimport Card from '@ui-lib/core/Card';\r\nimport CardActionArea from '@ui-lib/core/CardActionArea';\r\nimport CardActions from '@ui-lib/core/CardActions';\r\nimport CardContent from '@ui-lib/core/CardContent';\r\nimport CardMedia from '@ui-lib/core/CardMedia';\r\nimport Button from '@ui-lib/core/Button';\r\nimport Typography from '@ui-lib/core/Typography';\r\nimport Icon from '@ui-lib/core/Icon';\r\nimport DialogTitle from '@ui-lib/core/DialogTitle';\r\nimport Dialog from '@ui-lib/core/Dialog';\r\nimport List from '@ui-lib/core/List';\r\nimport ListItem from '@ui-lib/core/ListItem';\r\nimport ListItemText from '@ui-lib/core/ListItemText';\r\nimport { selectProducts } from '../redux/products/httpActions';\r\n\r\nconst styles = {\r\n    media: {\r\n        height: 140,\r\n        width: 250\r\n    },\r\n    card: {\r\n        maxWidth: 250,\r\n        maxHeight: 250,\r\n        marginLeft: '4vw'\r\n    },\r\n    cartButton: {\r\n        textAlign: 'end',\r\n        marginBottom: '2vh'\r\n    },\r\n    content: {\r\n        height: '65vh',\r\n        overflow: 'auto',\r\n        display: 'flex'\r\n    }\r\n};\r\n\r\nfunction ProductList({ classes }) {\r\n    const listProducts = useSelector((state) => state.products.listProducts);\r\n    const instance = useSelector((state) => state.products.instance);\r\n    const [isDialogOpen, setDialogOpen] = React.useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <CartDialog open={isDialogOpen} onClose={() => setDialogOpen(false)} />\r\n            <div className={classes.cartButton}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setDialogOpen(true)}>\r\n                    Cart <Icon className={'icon-ecommerce'} /> ({instance.products.length})\r\n                </Button>\r\n            </div>\r\n            <div className={classes.content}>\r\n                {listProducts.map((e, i) => (\r\n                    <Card key={e.productName + i} className={classes.card}>\r\n                        <CardActionArea>\r\n                            <CardMedia className={classes.media} image=\"https://cuoredimamma.pt/wp-content/uploads/2018/11/blog-ph.jpg\" title=\"Product\" />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {e.productName}\r\n                                </Typography>\r\n                                <Typography component=\"p\">{e.productPrice}€</Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Button size=\"small\" color=\"primary\" onClick={() => dispatch(selectProducts(instance.jwcontext.id, e.productId))}>\r\n                                Add to Cart\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ProductList);\r\n\r\nfunction CartDialog({ onClose, ...other }) {\r\n    const instance = useSelector((state) => state.products.instance);\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose()} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n            <DialogTitle id=\"simple-dialog-title\">Shopping Cart</DialogTitle>\r\n            <div>\r\n                <List>\r\n                    {instance &&\r\n                        instance.products &&\r\n                        instance.products.map((product, index) => (\r\n                            <ListItem key={product.productName + ' ' + index}>\r\n                                <ListItemText primary={product.productName} />\r\n                                <ListItemText primary={product.productPrice} />\r\n                            </ListItem>\r\n                        ))}\r\n                </List>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport TextField from '@ui-lib/core/TextField';\r\nimport Select from '@ui-lib/core/Select';\r\nimport MenuItem from '@ui-lib/core/MenuItem';\r\nimport Typography from '@ui-lib/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport { withStyles } from '@ui-lib/core/styles';\r\n\r\nconst styles = () => {\r\n    return {\r\n        select: {\r\n            marginTop: '5vh'\r\n        }\r\n    };\r\n};\r\n\r\nfunction CustomerInformation({ classes, setDeliveryOption, setAddress, setName, name, address, deliveryOption }) {\r\n    const defaultDeliveryOptions = useSelector((state) => state.products.deliveryOptions);\r\n\r\n    return (\r\n        <div>\r\n            <TextField id=\"Client Name\" fullWidth label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} margin=\"normal\" />\r\n            <br />\r\n            <TextField id=\"Address\" fullWidth label=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)} margin=\"normal\" />\r\n            <br />\r\n            <div className={classes.select}>\r\n                <Typography>Delivery Option:</Typography>\r\n                <br />\r\n                <Select\r\n                    value={deliveryOption}\r\n                    onChange={(e) => setDeliveryOption(e.target.value)}\r\n                    inputProps={{\r\n                        name: 'delivery-options',\r\n                        id: 'delivert-options-simple'\r\n                    }}\r\n                >\r\n                    {defaultDeliveryOptions.map((option, i) => (\r\n                        <MenuItem value={option.name} key={option.name + i}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CustomerInformation);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Typography from '@ui-lib/core/Typography';\r\nimport { withStyles } from '@ui-lib/core/styles';\r\n\r\nconst styles = () => {\r\n    return {\r\n        userInformation: {\r\n            marginTop: '2vh',\r\n            marginBottom: '2vh'\r\n        },\r\n        productInformation: {\r\n            marginTop: '2vh',\r\n            marginBottom: '2vh'\r\n        },\r\n        productSeparation: {\r\n            marginBottom: '1vh'\r\n        },\r\n        price: {\r\n            marginLeft: '85vw',\r\n            marginTop: '40vh'\r\n        }\r\n    };\r\n};\r\n\r\nfunction OrderConfirmartion({ classes }) {\r\n    const instance = useSelector((state) => state.products.instance);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.userInformation}>\r\n                <Typography variant={'h2'}>Customer Information:</Typography>\r\n                <div>\r\n                    <Typography>Name: {instance.customer.name}</Typography>\r\n                    <Typography>Address: {instance.customer.address}</Typography>\r\n                </div>\r\n            </div>\r\n            <div className={classes.productInformation}>\r\n                <Typography variant={'h2'}>Products:</Typography>\r\n                {instance.products.map((product, i) => (\r\n                    <div className={classes.productSeparation} key={product.productName + i}>\r\n                        <Typography>Product Name: {product.productName}</Typography>\r\n                        <Typography>Price: {product.productPrice}€</Typography>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className={classes.price}>\r\n                <Typography variant={'h2'}>Total Price: {instance.products.reduce((prev, current) => prev + current.productPrice, 0)}€</Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(OrderConfirmartion);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Typography from '@ui-lib/core/Typography';\r\nimport { withStyles } from '@ui-lib/core/styles';\r\n\r\nconst styles = (theme) => {\r\n    return {};\r\n};\r\n\r\nexport default function Details() {\r\n    const instance = useSelector((state) => state.products.instance);\r\n    return (\r\n        <>\r\n            <div>\r\n                <Typography variant={'h1'}>Order:</Typography>\r\n                Address: {instance.order.address} <br />\r\n                Delivery: {instance.order.delivery} <br />\r\n                Id: {instance.order.id}\r\n            </div>\r\n            <div>\r\n                <Typography variant={'h1'}>Products:</Typography>\r\n                {instance.order.products.map((product, i) => {\r\n                    return (\r\n                        <div key={product.productName + i}>\r\n                            Name: {product.productName} <br />\r\n                            Price: {product.productPrice} <br />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { readUpdateProcess } from '../redux/products/dataActions';\r\n\r\nexport default function WaitingForStore() {\r\n    const { RealTime, instance } = useSelector((state) => {\r\n        return {\r\n            RealTime: state.journey.services.RealTime,\r\n            instance: state.products.instance\r\n        };\r\n    });\r\n    const [rt, setRT] = React.useState(new RealTime());\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        rt.addEvent('onopen', handleOnOpen);\r\n        rt.addEvent('onmessage', handleOnMessage);\r\n        rt.addEvent('onerror', handleOnError);\r\n        rt.addEvent('onclose', handleOnClose);\r\n\r\n        rt.connect('localhost:4502/ordermanagement/v1/websocket/' + instance.jwcontext.id);\r\n    }, []);\r\n\r\n    function handleOnOpen(event) {\r\n        console.log('A connection has been established');\r\n        console.log(event);\r\n    }\r\n\r\n    function handleOnMessage(event) {\r\n        console.log('A message has been sent by the server');\r\n        let newInstance = Object.assign({}, {}, instance);\r\n        let data = JSON.parse(event.data);\r\n        if (data.state && data.status && data.updatedBy) {\r\n            newInstance.jwcontext.state = data.state;\r\n            newInstance.jwcontext.status = data.status;\r\n            dispatch(readUpdateProcess(newInstance));\r\n        }\r\n\r\n        console.log(event);\r\n    }\r\n\r\n    function handleOnError(event) {\r\n        console.log('An error message has been received');\r\n        console.log(event);\r\n    }\r\n\r\n    function handleOnClose(event) {\r\n        console.log('The Connection has been closed');\r\n        console.log(event);\r\n    }\r\n\r\n    return <div>...Waiting for the store</div>;\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@ui-lib/core/styles';\r\nimport Stepper from '@ui-lib/core/Stepper';\r\nimport Step from '@ui-lib/core/Step';\r\nimport StepLabel from '@ui-lib/core/StepLabel';\r\nimport Button from '@ui-lib/core/Button';\r\nimport Typography from '@ui-lib/core/Typography';\r\nimport ProductList from './ProductList';\r\nimport CustomerInformation from './CustomerInformation';\r\nimport OrderConfirmartion from './OrderConfirmation';\r\nimport Details from './Details';\r\nimport WaitingForStore from './WaitingForStore';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createOrder, updateCustomerInfo, submitOrder } from '../redux/products/httpActions';\r\nimport { reset } from '../redux/products/dataActions';\r\n\r\nconst styles = (theme) => {\r\n    return {\r\n        root: {\r\n            width: '94vw',\r\n            marginLeft: '3vw',\r\n            marginRight: '3vw',\r\n            marginTop: '1vh',\r\n            marginBottom: '1vh',\r\n            height: '85vh'\r\n        },\r\n        navigationButtons: {\r\n            position: 'absolute',\r\n            right: '5vw',\r\n            bottom: '5vh'\r\n        }\r\n    };\r\n};\r\n\r\nfunction StepWizard({ classes }) {\r\n    const dispatch = useDispatch();\r\n    const { instance, UserPreferences, User, preferences, defaultDeliveryOptions } = useSelector((state) => {\r\n        return {\r\n            instance: state.products.instance,\r\n            preferences: state.products.preferences,\r\n            defaultDeliveryOptions: state.products.deliveryOptions,\r\n            UserPreferences: state.journey.services.UserPreferences,\r\n            User: state.journey.services.User\r\n        };\r\n    });\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [deliveryOption, setDeliveryOption] = React.useState(defaultDeliveryOptions[0].name);\r\n\r\n    const steps = [\r\n        { name: 'New Order', component: <ProductList /> },\r\n        {\r\n            name: 'Customer Information',\r\n            component: <CustomerInformation setName={setName} setAddress={setAddress} setDeliveryOption={setDeliveryOption} name={name} address={address} deliveryOption={deliveryOption} />\r\n        },\r\n        { name: 'Submit Order', component: <OrderConfirmartion /> },\r\n        { name: 'Waiting for Store', component: <WaitingForStore /> },\r\n        { name: 'Finish', component: <Details /> }\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n        function getActiveStepGivenJWE() {\r\n            if (instance.jwcontext.status === 'PRODUCT CHOSEN') {\r\n                return 0;\r\n            } else if (instance.jwcontext.status === 'SUBMIT ORDER' && !instance.customer) {\r\n                return 1;\r\n            } else if (instance.jwcontext.status === 'SUBMIT ORDER') {\r\n                return 2;\r\n            } else if (instance.jwcontext.status === 'WAITING FOR \\nORDER IN STORE') {\r\n                return 3;\r\n            } else if (instance.jwcontext.status === 'END') {\r\n                return 4;\r\n            }\r\n        }\r\n\r\n        setActiveStep(getActiveStepGivenJWE());\r\n    }, [instance]);\r\n\r\n    function handleNext() {\r\n        if (instance.jwcontext.status === 'PRODUCT CHOSEN') {\r\n            dispatch(createOrder(instance.jwcontext.id));\r\n        } else if (instance.jwcontext.status === 'SUBMIT ORDER' && !instance.customer) {\r\n            dispatch(updateCustomerInfo(instance.jwcontext.id, { customer: { name, address }, deliveryOption }));\r\n        } else if (instance.jwcontext.status === 'SUBMIT ORDER') {\r\n            dispatch(submitOrder(instance.jwcontext.id));\r\n        } else if (instance.jwcontext.status === 'END') {\r\n            User.requestUser().then((user) => {\r\n                UserPreferences.deleteUserPreference(user.id, preferences.id).then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    function getButtonLabel(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return 'Create Order';\r\n            case 1:\r\n                return 'Submit Customer Information';\r\n            case 2:\r\n                return 'Submit Order';\r\n            case 3:\r\n                return;\r\n            case 4:\r\n                return 'Create a new order';\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    function buttonDisabled(step) {\r\n        switch (step) {\r\n            case 0:\r\n                if (instance.products.length > 0) return false;\r\n                return true;\r\n            case 1:\r\n                return false;\r\n            case 2:\r\n                return false;\r\n            case 3:\r\n                return false;\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((e) => {\r\n                    return (\r\n                        <Step key={e.name}>\r\n                            <StepLabel>{e.name}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        <Typography>All steps completed - you&apos;re finished</Typography>\r\n                        <Button onClick={this.handleReset}>New Order</Button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {steps[activeStep].component}\r\n                        <div className={classes.navigationButtons}>\r\n                            {activeStep !== 3 && (\r\n                                <Button disabled={buttonDisabled(activeStep)} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                                    {getButtonLabel(activeStep)}\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(StepWizard);\r\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div class=\"loadingbase\">\r\n            <div class=\"preloader\">\r\n                <div class=\"box\">\r\n                    <div class=\"box__inner\">\r\n                        <div class=\"box__back-flap\"></div>\r\n                        <div class=\"box__right-flap\"></div>\r\n                        <div class=\"box__front-flap\"></div>\r\n                        <div class=\"box__left-flap\"></div>\r\n                        <div class=\"box__front\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"box\">\r\n                    <div class=\"box__inner\">\r\n                        <div class=\"box__back-flap\"></div>\r\n                        <div class=\"box__right-flap\"></div>\r\n                        <div class=\"box__front-flap\"></div>\r\n                        <div class=\"box__left-flap\"></div>\r\n                        <div class=\"box__front\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n                <div class=\"line\">\r\n                    <div class=\"line__inner\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport StepWizard from './components/StepWizard';\r\nimport { useSelector } from 'react-redux';\r\nimport { withStyles } from '@ui-lib/core/styles';\r\nimport Loading from './components/Loading';\r\n\r\nconst styles = (theme) => ({});\r\n\r\nfunction Root({ classes }) {\r\n    const [readyInstance, setReadyInstance] = React.useState(false);\r\n    const instance = useSelector((state) => state.products.instance);\r\n    const preferences = useSelector((state) => state.products.preferences);\r\n\r\n    const UserPreferences = useSelector((state) => state.journey.services.UserPreferences);\r\n    const User = useSelector((state) => state.journey.services.User);\r\n\r\n    React.useEffect(() => {\r\n        User.requestUser().then((user) => {\r\n            if (preferences.properties.length < 1) {\r\n                UserPreferences.createProperty(user.id, preferences.id, { name: 'instanceId', description: 'instanceId of ordermanagement', value: instance.jwcontext.id }).then(() => {\r\n                    setReadyInstance(true);\r\n                });\r\n            } else {\r\n                setReadyInstance(true);\r\n            }\r\n            console.log(instance);\r\n            console.log(preferences);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return <div>{readyInstance ? <StepWizard /> : <Loading />}</div>;\r\n}\r\n\r\nexport default withStyles(styles)(Root);\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRootHoc } from 'omni-journey';\r\nimport { initializeUsersHttpClientService, getProducts, getCategories, getDeliveryOptions, readUpdateProcess } from './redux/products/httpActions';\r\nimport { setInstanceId, setPreferences } from './redux/products/dataActions';\r\nimport Root from './root';\r\nimport qs from 'qs';\r\nimport { createInstance } from './redux/products/httpActions';\r\nimport Loading from './components/Loading';\r\n\r\nconst Journey = () => {\r\n    const [readyDependencies, setReadyDependencies] = React.useState(false);\r\n    const { preferences, User, UserPreferences, dependencies } = useSelector((state) => {\r\n        return {\r\n            preferences: state.products.preferences,\r\n            UserPreferences: state.journey.services.UserPreferences,\r\n            User: state.journey.services.User,\r\n            dependencies: state.products.dependencies\r\n        };\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    React.useState(() => {\r\n        dispatch(initializeUsersHttpClientService());\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProducts(1));\r\n        dispatch(getCategories(1));\r\n        dispatch(getDeliveryOptions(1));\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (!preferences) {\r\n            let params = {\r\n                expression: 'path==*ordermanagement*',\r\n                limit: 1,\r\n                sort: 'path;asc'\r\n            };\r\n            let query = qs.stringify(params, { arrayFormat: 'repeat' });\r\n            User.requestUser().then((user) => {\r\n                UserPreferences.queryUserPreferences(user.id, query)\r\n                    .then((preference) => {\r\n                        /**\r\n                         * No preferences found\r\n                         */\r\n                        if (preference && preference.data && preference.data.length < 1) {\r\n                            UserPreferences.createPreference(user.id, { path: 'ordermanagement' }).then((createdPreference) => {\r\n                                dispatch(createInstance());\r\n                                dispatch(setPreferences(createdPreference.data));\r\n                            });\r\n                        } else {\r\n                            dispatch(setPreferences(preference.data[0]));\r\n                            if (preference && preference.data && preference.data[0].properties && preference.data[0].properties.length > 0) {\r\n                                dispatch(setInstanceId(preference.data[0].properties[0].value));\r\n                                dispatch(readUpdateProcess(preference.data[0].properties[0].value));\r\n                            } else {\r\n                                dispatch(createInstance());\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch((e) => {\r\n                        console.log(e);\r\n                    });\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [preferences]);\r\n\r\n    React.useEffect(() => {\r\n        if (dependencies.fetchedListProducts && dependencies.fetchedCategories && dependencies.fetchedDeliveryOptions && dependencies.fetchedInstance && dependencies.fetchedPreferences) {\r\n            setReadyDependencies(true);\r\n        }\r\n    }, [dependencies]);\r\n\r\n    return <div>{readyDependencies ? <Root /> : <Loading />}</div>;\r\n};\r\n\r\nexport default withRootHoc(Journey);\r\n","import {\r\n    CREATE_INSTANCE,\r\n    CREATE_ORDER,\r\n    GET_CATEGORIES,\r\n    GET_DELIVERY_OPTIONS,\r\n    GET_PRODUCTS,\r\n    READ_UPDATE_PROCESS,\r\n    SELECT_PRODUCTS,\r\n    SUBMIT_ORDER,\r\n    UPDATE_CUSTOMER_INFO,\r\n    SET_INSTANCE_ID,\r\n    SET_PREFERENCES,\r\n    RESET\r\n} from './actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    listProducts: [],\r\n    categories: '',\r\n    instance: {},\r\n    deliveryOptions: [],\r\n    instanceId: undefined,\r\n    preferences: undefined,\r\n    dependencies: {\r\n        fetchedListProducts: false,\r\n        fetchedCategories: false,\r\n        fetchedInitialInstanceId: false,\r\n        fetchedDeliveryOptions: false,\r\n        fetchedInstance: false,\r\n        fetchedPreferences: false\r\n    }\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_INSTANCE_ID:\r\n            return { ...state, instanceId: action.instanceId, dependencies: { ...state.dependencies, fetchedInitialInstanceId: true } };\r\n        case CREATE_INSTANCE:\r\n            return { ...state, instance: action.instance, dependencies: { ...state.dependencies, fetchedInstance: true } };\r\n        case CREATE_ORDER:\r\n            return { ...state, instance: action.instance };\r\n        case GET_CATEGORIES:\r\n            return { ...state, categories: action.categories, dependencies: { ...state.dependencies, fetchedCategories: true } };\r\n        case GET_DELIVERY_OPTIONS:\r\n            return { ...state, deliveryOptions: action.deliveryOptions, dependencies: { ...state.dependencies, fetchedDeliveryOptions: true } };\r\n        case GET_PRODUCTS:\r\n            return { ...state, listProducts: action.products, dependencies: { ...state.dependencies, fetchedListProducts: true } };\r\n        case READ_UPDATE_PROCESS:\r\n            return { ...state, instance: action.instance, dependencies: { ...state.dependencies, fetchedInstance: true } };\r\n        case SELECT_PRODUCTS:\r\n            return { ...state, instance: action.instance };\r\n        case SUBMIT_ORDER:\r\n            return { ...state, instance: action.instance };\r\n        case UPDATE_CUSTOMER_INFO:\r\n            return { ...state, instance: action.instance };\r\n        case SET_PREFERENCES:\r\n            return { ...state, preferences: action.preferences, dependencies: { ...state.dependencies, fetchedPreferences: true } };\r\n        case RESET:\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStoreSingleton } from 'omni-journey';\r\n\r\nimport products from './products/reducer';\r\n\r\nconst reducers = { products };\r\n\r\nconst store = createStoreSingleton(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Journey from './journey';\r\nimport { Provider } from 'react-redux';\r\nimport { name as packageName, parent } from './../package.json';\r\nimport { FinalJourney } from 'omni-journey';\r\nimport store from './redux/store';\r\n\r\nconst RenderJourney = FinalJourney(Journey, store, packageName, parent);\r\n\r\nexport default class App extends React.Component {\r\n    handleReceiveMessage() {}\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <div>\r\n                    <RenderJourney handleReceiveMessage={this.handleReceiveMessage} />\r\n                </div>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n","import 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = OmniJourney;","module.exports = UiLibCore.Button;"],"sourceRoot":""}